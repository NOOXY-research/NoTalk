{
  "name": "NoTalk",
  "version": "0.0.0",
  "displayname": "NOOXY Chat Service",
  "description": "A service that provide live chat, channel and other features.",
  "git_url": "https://github.com/NOOXY-Research/NoTalk",
  "Authors": [
    "NOOXY",
    "noowyee"
  ],

  "implementation_api": false,

  "dependencies": {
    "node_packages": {},
    "services": {}
  },

  "servicefunctions": {
    "createCh": {
      "displayname": "Create a channel.",
      "description": "Create a NoTalk channel.",
      "secure": false,
      "protocol": {
        "call": {
          "t": "Type of channel for example 'live' or 'normal'",
          "p": "Privaty of channel for example 'public', 'locked' or 'private'",
          "n": "Channel's name.",
          "d": "Channel's discribtion."
        },
        "return": {
          "s": "Status.",
          "e": "Error status."
        }
      }
    },

    "bindCh": {
      "displayname": "Bind a channel.",
      "description": "Keep in touch in specified channel. Then will recieve new messages from activitysocket.",
      "secure": false,
      "protocol": {
        "call": {
          "c": "Channel's ID."
        },
        "return": {
          "s": "Status.",
          "e": "Error status."
        }
      }
    },

    "getChRows": {
      "displayname": "Get history",
      "description": "Get history from a existed channel.",
      "secure": false,
      "protocol": {
        "call": {
          "c": "Channel's ID.",
          "s": "Start row of data from the channel.",
          "e": "End row of data from the channel."
        },
        "return": {
          "s": "Status.",
          "e": "Error status.",
          "r": ["row number", "type", "data"]
        }
      }
    },

    "editChRow": {
      "displayname": "Get history",
      "description": "Get history from a existed channel.",
      "secure": false,
      "protocol": {
        "call": {
          "c": "Channel's ID.",
          "t": "Type of operation. 'del' or 'edit'",
          "n": "New contain."
        },
        "return": {
          "s": "Status.",
          "e": "Error status."
        }
      }
    },

    "listChs": {
      "displayname": "List channels",
      "description": "List channels of the user have.",
      "secure": false,
      "protocol": {
        "call": null,
        "return": {
          "s": "Status.",
          "e": "Error status."
        }
      }
    },

    "getUserMeta": {
      "displayname": "Get user's meta.",
      "description": "Recieve user's metadata from server.",
      "secure": false,
      "protocol": {
        "call": {
          "u": "user Id."
        },
        "return": {
          "n": "username",
          "b": "bio",
          "l": "latestonline"
        }
      }
    },

    "getMyMeta": {
      "displayname": "Get user's meta.",
      "description": "Recieve user's metadata from server.",
      "secure": false,
      "protocol": {
        "call": {
          "u": "user Id."
        },
        "return": {
          "n": "username",
          "j": "joindate",
          "b": "bio",
          "a": "showactive",
          "p": "clientpreference"
        }
      }
    },

    "getChMeta": {
      "displayname": "Get channel's meta.",
      "description": "Recieve channel's metadata from server.",
      "secure": false,
      "protocol": {
        "call": {
          "c": "Channel's ID."
        },
        "return": {
          "o": "owners",
          "n": "displayname",
          "d": "discription",
          "u": "users",
          "s": "Status.",
          "e": "Error status."
        }
      }
    },

    "getChUsers": {
      "displayname": "Get channel's meta.",
      "description": "Recieve channel's metadata from server.",
      "secure": false,
      "protocol": {
        "call": {
          "c": "Channel's ID."
        },
        "return": {
          "s": "Status.",
          "e": "Error status.",
          "d": [
            ["username", "isadmin"]
          ]
        }
      }
    },

    "addChUsers": {
      "displayname": "Add users.",
      "description": "Add NoTalk users into a channel.",
      "secure": false,
      "protocol": {
        "call": {
          "c": "Channel's ID.",
          "u":[
            ["username", "isadmin"]
          ]
        },
        "return": {
          "s": "Status.",
          "e": "Error status."
        }
      }
    },

    "editChUsers": {
      "displayname": "Edit user.",
      "description": "Edit NoTalk users in a channel.",
      "secure": false,
      "protocol": {
        "call": {
          "c": "Channel's ID.",
          "u":[
            ["username", "new isadmin"]
          ]
        },
        "return": {
          "s": "Status.",
          "e": "Error status."
        }
      }
    },

    "updateChMeta": {
      "displayname": "Update channel's meta.",
      "description": "Update channel's metadata of server.",
      "secure": false,
      "protocol": {
        "call": {
          "c": "Channel's ID.",
          "d": "Displayname."
        },
        "return": {
          "o": "owners",
          "n": "displayname",
          "d": "discription",
          "u": "users",
          "s": "Status.",
          "e": "Error status."
        }
      }
    }
  }
}
